def dockerWorkDir = file(project.layout.buildDirectory.dir('docker'))

task dockerCopyEntrypoint(type: Copy) {
    group 'docker'
    from project.file('docker-entrypoint.sh').absolutePath
    into dockerWorkDir
}

task dockerCopyJar(type: Copy) {
    group 'docker'
    if (project.hasProperty('jar')) {
        dependsOn assemble

        def dest = dockerWorkDir
        dest.mkdirs()

        from file(jar.archivePath.absolutePath)
        into dest
    }
}

def imageTag = {
    if (project.hasProperty('imageTag')) {
        "$dockerNexusUrl/${dockerImageName}:${imageTag}"
    } else {
        "$dockerNexusUrl/${dockerImageName}:${version}"
    }
}

task dockerBuildImage(type: Exec) {
    group 'docker'
    if (project.hasProperty('jar')) {
        dependsOn dockerCopyJar
        dependsOn dockerCopyEntrypoint
        workingDir dockerWorkDir
        def dockerFile = project.layout.projectDirectory.file('Dockerfile').asFile.absolutePath
        commandLine 'docker', 'build', '-t', imageTag(), '-f', dockerFile, '--build-arg', "VERSION=${version}", '--build-arg', "JAR_NAME=${jar.archiveName}", '.'
    }
}

task dockerLogin(type: Exec) {
    group 'docker'
    commandLine 'docker', 'login', dockerNexusUrl, '-u', pruMavenUser, '-p', pruMavenPassword
}

task dockerPushImage(type: Exec) {
    group 'docker'
    dependsOn dockerLogin
    dependsOn dockerBuildImage
    commandLine 'docker', 'push', imageTag()
}

task dockerBuildAndPushImage {
    group 'docker'
    dependsOn 'dockerPushImage'
}
